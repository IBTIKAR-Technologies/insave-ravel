import * as yup from 'yup';

export default function concession(t, chefSelected) {
  return [
    {
      title: t('first_name'),
      type: 'text',
      name: 'firstName',
      placeholder: t('first_name'),
      order: 1,
    },
    {
      title: t('namef'),
      type: 'text',
      name: 'name',
      placeholder: t('namef'),
      order: 2,
    },
    {
      title: t('hasNni'),
      type: 'select',
      name: 'hasNni',
      label: t('select_one'),
      options: [
        {
          label: t('yes'),
          value: 'yes',
        },
        {
          label: t('no'),
          value: 'no',
        },
      ],
      order: 3,
    },
    {
      title: t('nni_num'),
      type: 'num',
      name: 'nni',
      depends: 'hasNni',
      answer: 'yes',
      placeholder: t('nni_num'),
      order: 3.1,
    },
    {
      title: t('why_no_nni'),
      type: 'select',
      name: 'whyNoNni',
      depends: 'hasNni',
      answer: 'no',
      label: t('select_one'),
      order: 3.1,
      options: [
        { label: t('couldn_document'), value: 'couldn_document' },
        { label: t('cant_access'), value: 'cant_access' },
        { label: t('cant_save'), value: 'cant_save' },
        { label: t('other'), value: 'other' },
      ],
    },
    {
      title: t('chef_link_whith'),
      type: 'select',
      name: 'chefLink',
      label: t('select_one'),
      order: 4,
      options: chefSelected ? [
        { label: t('spouse'), value: 'spouse' },
        { label: t('son_dat'), value: 'son_dat' },
        { label: t('smal_son_dat'), value: 'smal_son_dat' },
        { label: t('fath_moth'), value: 'fath_moth' },
        { label: t('broth_sis'), value: 'broth_sis' },
        { label: t('niece'), value: 'niece' },
        { label: t('step_s'), value: 'step_s' },
        { label: t('othe_p'), value: 'othe_p' },
        { label: t('no_link'), value: 'no_link' },
      ] : [
        { label: t('chef_m'), value: 'chef_m' },
      ],
    },
    {
      title: t('sex'),
      type: 'select',
      name: 'sex',
      label: t('select_one'),
      options: [
        {
          label: t('male'),
          value: 'male',
        },
        {
          label: t('female'),
          value: 'female',
        },
      ],
      order: 5,
    },
    {
      title: t('born_in'),
      type: 'num',
      name: 'bornIn',
      placeholder: t('born_in'),
      order: 6,
    },
    {
      title: t('mother_lang'),
      type: 'select',
      name: 'lang',
      label: t('mother_lang'),
      order: 7,
      options: [
        { label: t('arab'), value: 'arab' },
        { label: t('polar'), value: 'polar' },
        { label: t('sonik'), value: 'sonik' },
        { label: t('wolof'), value: 'wolof' },
        { label: t('other'), value: 'other' },
      ],
    },
    {
      title: t('parent_dead'),
      type: 'select',
      name: 'parentLife',
      label: t('parent_dead'),
      order: 8,
      options: [
        { label: t('fath_dead'), value: 'fath_dead' },
        { label: t('mother_dead'), value: 'mother_dead' },
        { label: t('both_p_dead'), value: 'both_p_dead' },
        { label: t('both_p_alive'), value: 'both_p_alive' },
      ],
    },
    {
      title: t('go_school'),
      type: 'select',
      name: 'goSchool',
      label: t('select_one'),
      depends: 'bornIn',
      valueIsgte: 3,
      order: 9,
      options: [
        {
          label: t('yes'),
          value: 'yes',
        },
        {
          label: t('no'),
          value: 'no',
        },
      ],
    },
    {
      title: t('most_study'),
      type: 'select',
      name: 'mostStudy',
      label: t('select_one'),
      depends: 'bornIn',
      valueIsgte: 3,
      order: 10,
      options: [
        { label: t('no_study'), value: 'no_study' },
        { label: t('p_alphabt'), value: 'p_alphabt' },
        { label: t('coran'), value: 'coran' },
        { label: t('mahdara'), value: 'mahdara' },
        { label: t('primary'), value: 'primary' },
        {
          label: t('secondary'),
          value: 'secondary',
        },
        { label: t('highschool'), value: 'highschool' },
        {
          label: t('university'),
          value: 'university',
        },
      ],
    },
    {
      title: t('read_write'),
      type: 'select',
      name: 'readWrite',
      label: t('select_one'),
      depends: 'bornIn',
      valueIsgte: 10,
      order: 11,
      options: [
        {
          label: t('yes'),
          value: 'yes',
        },
        {
          label: t('no'),
          value: 'no',
        },
      ],
    },
    {
      title: t('mariage_state'),
      type: 'select',
      name: 'mariage',
      label: t('select_one'),
      depends: 'bornIn',
      valueIsgte: 10,
      order: 12,
      options: [
        {
          label: t('single'),
          value: 'single',
        },
        {
          label: t('maried'),
          value: 'maried',
        },
        {
          label: t('maried_polyg'),
          value: 'maried_polyg',
        },
        {
          label: t('maried_polyg1'),
          value: 'maried_polyg1',
        },
        {
          label: t('maried_polyg2'),
          value: 'maried_polyg2',
        },
        {
          label: t('maried_polyg3'),
          value: 'maried_polyg3',
        },
        {
          label: t('maried_polyg4'),
          value: 'maried_polyg4',
        },
        {
          label: t('divorced'),
          value: 'divorced',
        },
        {
          label: t('widowed'),
          value: 'widowed',
        },
      ],
    },
    {
      title: t('ocup_7_days'),
      type: 'select',
      name: 'ocup7Days',
      label: t('select_one'),
      depends: 'bornIn',
      valueIsgte: 10,
      order: 13,
      options: [
        { label: t('ocup'), value: 'ocup' },
        { label: t('in_ocup_already'), value: 'inOcupAlredy' },
        { label: t('in_ocup_never'), value: 'inOcupNever' },
        { label: t('student'), value: 'student' },
        { label: t('housewife'), value: 'housewife' },
        { label: t('retired'), value: 'retired' },
        { label: t('rentier'), value: 'rentier' },
        { label: t('in_handicap'), value: 'inHandicap' },
        { label: t('other_inac'), value: 'otherInac' },
      ],
    },
    {
      title: t('work_status_7_days'),
      type: 'select',
      name: 'workStatus7D',
      label: t('select_one'),
      depends: 'ocup7Days',
      answer: ['ocup', 'inOcupAlredy'],
      order: 14,
      options: [
        {
          label: t('independent'),
          value: 'independent',
        },
        {
          label: t('sPublic'),
          value: 'sPublic',
        },
        {
          label: t('sPrivePerm'),
          value: 'sPrivePerm',
        },
        {
          label: t('sPriveTem'),
          value: 'sPriveTem',
        },
        {
          label: t('employeur'),
          value: 'employeur',
        },
        {
          label: t('apprenti'),
          value: 'apprenti',
        },
        {
          label: t('aidFami'),
          value: 'aidFami',
        },
        {
          label: t('stage'),
          value: 'stage',
        },
        {
          label: t('benevole'),
          value: 'benevole',
        },
      ],
    },
    {
      title: t('work_branch_7_days'),
      type: 'select',
      name: 'workBranch7D',
      label: t('select_one'),
      depends: 'ocup7Days',
      answer: ['ocup', 'inOcupAlredy'],
      order: 15,
      options: [
        { label: t('agriculture'), value: 'agriculture' },
        { label: t('elevage'), value: 'elevage' },
        { label: t('peche'), value: 'peche' },
        { label: t('mine'), value: 'mine' },
        { label: t('indAliment'), value: 'indAliment' },
        { label: t('artesin'), value: 'artesin' },
        { label: t('autreTrans'), value: 'autreTrans' },
        { label: t('btp'), value: 'btp' },
        { label: t('transport'), value: 'transport' },
        { label: t('communication'), value: 'communication' },
        { label: t('commerce'), value: 'commerce' },
        { label: t('divers'), value: 'divers' },
        { label: t('educ'), value: 'education' },
        { label: t('sant'), value: 'sante' },
        { label: t('administration'), value: 'administration' },
        { label: t('autre'), value: 'autre' },
        { label: t('neant'), value: 'neant' },
      ],
    },
    {
      title: t('ocup_12_months'),
      type: 'select',
      name: 'ocup12Months',
      label: t('select_one'),
      depends: 'bornIn',
      valueIsgte: 10,
      notEqu: 'ocup7Days',
      to: 'inOcupNever',
      order: 16,
      options: [
        { label: t('ocup'), value: 'ocup' },
        { label: t('in_ocup_already'), value: 'inOcupAlredy' },
        { label: t('student'), value: 'student' },
        { label: t('housewife'), value: 'housewife' },
        { label: t('retired'), value: 'retired' },
        { label: t('rentier'), value: 'rentier' },
        { label: t('in_handicap'), value: 'inHandicap' },
        { label: t('other_inac'), value: 'otherInac' },
      ],
    },
    {
      title: t('work_branch_12_months'),
      type: 'select',
      name: 'workBranch12Months',
      label: t('select_one'),
      depends: 'ocup12Months',
      answer: 'ocup',
      order: 17,
      options: [
        { label: t('agriculteur'), value: 'agriculteur' },
        { label: t('eleveur'), value: 'eleveur' },
        { label: t('pecheur'), value: 'pêcheur' },
        { label: t('entrepreneur'), value: 'entrepreneur' },
        { label: t('c_adm'), value: 'cAdminis' },
        { label: t('a_adm'), value: 'aAdminis' },
        { label: t('commercant'), value: 'commerçant' },
        { label: t('vendeur'), value: 'vendeur' },
        { label: t('artisan'), value: 'artisan' },
        { label: t('sDomestic'), value: 'sDomestic' },
        { label: t('fArmSec'), value: 'fArmSec' },
        { label: t('ouvrier'), value: 'ouvrier' },
        { label: t('aMetProf'), value: 'aMetProf' },
      ],
    },
  ];
}

export const validationSchema = t =>
  yup.object().shape({
    firstName: yup.string().required(`1. ${t('first_name')}`),
    name: yup.string().required(`2. ${t('namef')}`),
    hasNni: yup.string().required(`3. ${t('hasNni')}`),
    nni: yup.string().when('hasNni', {
      is: 'yes',
      then: yup.string().required(`3.1. ${t('nni_num')}`),
    }),
    whyNoNni: yup.string().when('hasNni', {
      is: 'no',
      then: yup.string().required(`3.1. ${t('why_no_nni')}`),
    }),
    chefLink: yup.string().required(`4. ${t('chef_link_whith')}`),
    sex: yup.string().required(`5. ${t('sex')}`),
    bornIn: yup.string().required(`6. ${t('born_in')}`).test('is_number', `6. ${t('invalid')}`, val => !isNaN(val) && parseInt(val, 10) >= 1910 && val <= new Date().getFullYear()),
    lang: yup.string().required(`7. ${t('mother_lang')}`),
    parentLife: yup.string().required(`8. ${t('parent_dead')}`),
    goSchool: yup.string().when('bornIn', (bornIn, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 3 ? schema.required(`9. ${t('go_school')}`).oneOf([yup.ref('goSchool')]) : schema),
    mostStudy: yup.string().when('bornIn', (bornIn, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 3 ? schema.required(`10. ${t('most_study')}`).oneOf([yup.ref('mostStudy')]) : schema),
    readWrite: yup.string().when('bornIn', (bornIn, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 ? schema.required(`11. ${t('read_write')}`).oneOf([yup.ref('readWrite')]) : schema),
    mariage: yup.string().when('bornIn', (bornIn, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 ? schema.required(`12. ${t('mariage_state')}`).oneOf([yup.ref('mariage')]) : schema),
    ocup7Days: yup.string().when('bornIn', (bornIn, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 ? schema.required(`13. ${t('ocup_7_days')}`).oneOf([yup.ref('ocup7Days')]) : schema),
    workStatus7D: yup.string().when(['bornIn', 'ocup7Days'], (bornIn, ocup7Days, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 && (ocup7Days === 'ocup' || ocup7Days === 'inOcupAlredy') ? schema.required(`14. ${t('work_status_7_days')}`).oneOf([yup.ref('workStatus7D')]) : schema),
    workBranch7D: yup.string().when(['bornIn', 'ocup7Days'], (bornIn, ocup7Days, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 && (ocup7Days === 'ocup' || ocup7Days === 'inOcupAlredy') ? schema.required(`15. ${t('work_branch_7_days')}`).oneOf([yup.ref('workBranch7D')]) : schema),
    ocup12Months: yup.string().when(['bornIn', 'ocup7Days'], (bornIn, ocup7Days, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 && ocup7Days !== 'inOcupNever' ? schema.required(`16. ${t('ocup_12_months')}`).oneOf([yup.ref('ocup12Months')]) : schema),
    workBranch12Months: yup.string().when(['bornIn', 'ocup12Months'], (bornIn, ocup12Months, schema) => parseInt(bornIn, 10) <= new Date().getFullYear() - 10 && ocup12Months === 'ocup' ? schema.required(`17. ${t('work_branch_12_months')}`).oneOf([yup.ref('workBranch12Months')]) : schema),
  });

export const initialValues = {
  firstName: '',
  name: '',
  hasNni: '',
  nni: '',
  whyNoNni: '',
  chefLink: '',
  sex: '',
  bornIn: '',
  lang: '',
  parentLife: '',
  goSchool: '',
  mostStudy: '',
  readWrite: '',
  mariage: '',
  ocup7Days: '',
  workStatus7D: '',
  workBranch7D: '',
  ocup12Months: '',
  workBranch12Months: '',
};
