import * as yup from 'yup';

export const questionaire = t => [
  {
    title: t('tel_chef'),
    type: 'num',
    name: 'TelChef',
    placeholder: t('tel_chef'),
    order: 1,
  },
  {
    title: t('nni_number'),
    type: 'num',
    name: 'NNIChef',
    placeholder: t('nni_number'),
    order: 2,
  },
  {
    title: t('family_size'),
    type: 'num',
    name: 'NbrMbrMen',
    placeholder: t('input_family_size'),
    order: 3,
  },
  {
    title: t('family_handicap'),
    type: 'select',
    name: 'hasHandicaps',
    label: t('select_one'),
    order: 4,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('yes_many'), value: 'yes_many' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('what_hadicap'),
    type: 'select',
    name: 'handicapType',
    label: t('select_what_applies'),
    multiple: true,
    order: 4.1,
    options: [
      { label: t('visual_handicap'), value: 'visAud_handicap' },
      { label: t('physic_Handicap'), value: 'physic_Handicap' },
      { label: t('mental_handicap'), value: 'mental_handicap' },
      { label: t('other'), value: 'other' },
    ],
    depends: 'hasHandicaps',
    answer: ['yes', 'yes_many'],
  },
  {
    title: t('has_cronic_illness'),
    type: 'select',
    name: 'hasCronicIllness',
    label: t('select_one'),
    order: 5,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('renal_insufisian'),
    type: 'num',
    name: 'infRenal',
    label: t('renal_insufisian'),
    order: 5.1,
    depends: 'hasCronicIllness',
    answer: 'yes',
  },
  {
    title: t('debetes'),
    type: 'num',
    name: 'debetes',
    label: t('debetes'),
    order: 5.2,
    depends: 'hasCronicIllness',
    answer: 'yes',
  },
  {
    title: t('cardiaque'),
    type: 'num',
    name: 'cardiaque',
    label: t('cardiaque'),
    order: 5.3,
    depends: 'hasCronicIllness',
    answer: 'yes',
  },
  {
    title: t('other_illness'),
    type: 'num',
    name: 'otherIllness',
    label: t('other_illness'),
    order: 5.4,
    depends: 'hasCronicIllness',
    answer: 'yes',
  },
  {
    title: t('asurrance'),
    type: 'select',
    name: 'asurrance',
    label: t('select_one'),
    order: 6,
    options: [
      { label: t('no_assurance'), value: 'noAssurance' },
      { label: t('work_assurance'), value: 'workAssurance' },
      { label: t('personal_assurrance'), value: 'personalAssurance' },
      { label: t('chef_assurace'), value: 'chefAssurace' },
    ],
  },
  {
    title: t('state_programs'),
    type: 'select',
    name: 'statePrograms',
    label: t('select_one'),
    order: 7,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('which_program'),
    type: 'select',
    name: 'wichProgram',
    label: t('select_what_applies'),
    multiple: true,
    order: 7.1,
    options: [
      { label: t('food_transfer'), value: 'food_transfer' },
      { label: t('food_tikets'), value: 'food_tikets' },
      { label: t('sinist_help'), value: 'sinist_help' },
      { label: t('money_help'), value: 'money_help' },
      { label: t('emel'), value: 'emel' },
      { label: t('savs'), value: 'savs' },
      { label: t('free_food_dist'), value: 'free_food_dist' },
      { label: t('crenam'), value: 'crenam' },
      { label: t('school_food'), value: 'school_food' },
      { label: t('micro_enterprise'), value: 'micro_enterprise' },
      { label: t('revenu_generation'), value: 'revenu_generation' },
      { label: t('community_micro_proj'), value: 'community_micro_proj' },
      { label: t('handicap_help'), value: 'handicap_help' },
      { label: t('f_obsterical'), value: 'f_obsterical' },
      { label: t('other_prog'), value: 'other_prog' },
      { label: t('res_prog'), value: 'res_prog' },
      { label: t('work_prog'), value: 'work_prog' },
    ],
    depends: 'statePrograms',
    answer: 'yes',
  },
  {
    title: t('has_other_house'),
    type: 'select',
    name: 'otherHouse',
    label: t('select_one'),
    order: 8,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('farming_land'),
    type: 'select',
    name: 'farmingLand',
    label: t('select_one'),
    order: 9,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('walo_land'),
    type: 'select',
    name: 'waloLand',
    label: t('select_one'),
    depends: 'farmingLand',
    answer: 'yes',
    order: 10,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('moud'),
    type: 'num',
    name: 'waloMoud',
    label: t('moud'),
    depends: 'waloLand',
    answer: 'yes',
    order: 11,
  },
  {
    title: t('diri_land'),
    type: 'select',
    name: 'diriLand',
    label: t('select_one'),
    depends: 'farmingLand',
    answer: 'yes',
    order: 12,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('moud'),
    type: 'num',
    name: 'diriMoud',
    label: t('moud'),
    depends: 'diriLand',
    answer: 'yes',
    order: 13,
  },
  {},
  {},
  {
    title: t('free_farm_land'),
    type: 'select',
    name: 'freeFarmLand',
    label: t('select_one'),
    order: 14,
    options: [
      { label: t('no'), value: 'no' },
      { label: t('rent'), value: 'rent' },
      { label: t('met'), value: 'met' },
      { label: t('priv_land'), value: 'privLand' },
      { label: t('free_land'), value: 'freeLand' },
    ],
  },
  {
    title: t('walo_land_no_prop'),
    type: 'select',
    name: 'waloLandNoProp',
    label: t('select_one'),
    order: 15,
    depends: 'freeFarmLand',
    answer: ['rent', 'met', 'privLand', 'freeLand'],
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('moud'),
    type: 'num',
    name: 'waloNoPropMoud',
    label: t('moud'),
    depends: 'waloLandNoProp',
    answer: 'yes',
    order: 15.1,
  },
  {
    title: t('diri_land_no_prop'),
    type: 'select',
    name: 'diriLandNoProp',
    label: t('select_one'),
    depends: 'freeFarmLand',
    answer: ['rent', 'met', 'privLand', 'freeLand'],
    order: 16,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('moud'),
    type: 'num',
    name: 'diriNoPropMoud',
    label: t('moud'),
    depends: 'diriLandNoProp',
    answer: 'yes',
    order: 16.1,
  },
  {
    title: t('irigue_land_no_prop'),
    type: 'select',
    name: 'irigueLandNoProp',
    label: t('irigue_land_no_prop'),
    depends: 'freeFarmLand',
    answer: ['rent', 'met', 'privLand', 'freeLand'],
    order: 17,
    options: [
      { label: t('yes'), value: 'yes' },
      { label: t('no'), value: 'no' },
    ],
  },
  {
    title: t('moud'),
    type: 'num',
    name: 'irigueNoPropMoud',
    label: t('moud'),
    depends: 'irigueLandNoProp',
    answer: 'yes',
    order: 17.1,
  },
  {
    title: t('chiken'),
    type: 'num',
    name: 'chiken',
    label: t('chiken'),
    order: 18,
  },
  {
    title: t('donkey'),
    type: 'num',
    name: 'donkey',
    label: t('donkey'),
    order: 19,
  },
  {
    title: t('horse'),
    type: 'num',
    name: 'horse',
    label: t('horse'),
    order: 20,
  },
  {
    title: t('family_has_any'),
    type: 'select',
    name: 'familyHasAny',
    label: t('select_what_applies'),
    order: 21,
    multiple: true,
    options: [
      {
        label: t('antenne'),
        value: 'antenne',
      },
      {
        label: t('banc_ac'),
        value: 'banc_ac',
      },
      {
        label: t('radio'),
        value: 'radio',
      },
      {
        label: t('landline_phone'),
        value: 'landline_phone',
      },
      {
        label: t('port_phone'),
        value: 'port_phone',
      },
      {
        label: t('computer'),
        value: 'computer',
      },
      {
        label: t('gold_acce'),
        value: 'gold_acce',
      },
      {
        label: t('fan'),
        value: 'fan',
      },
      {
        label: t('internet'),
        value: 'internet',
      },
      {
        label: t('cart'),
        value: 'cart',
      },
      {
        label: t('salon_comple'),
        value: 'salon_comple',
      },
      {
        label: t('simpl_mat'),
        value: 'simpl_mat',
      },
      {
        label: t('matlas'),
        value: 'matlas',
      },
      {
        label: t('other_mat'),
        value: 'other_mat',
      },
      {
        label: t('brouette'),
        value: 'brouette',
      },
    ],
  },
  {}, {},
  {
    title: t('food_source'),
    type: 'select',
    name: 'foodSource',
    label: t('select_one'),
    multiple: true,
    max: 3,
    options: [
      {
        label: t('prop_prod'),
        value: 'prop_prod',
      },
      {
        label: t('buy'),
        value: 'buy',
      },
      {
        label: t('lend'),
        value: 'lend',
      },
      {
        label: t('frend_give'),
        value: 'frend_give',
      },
      {
        label: t('food_work'),
        value: 'food_work',
      },
      {
        label: t('other'),
        value: 'other',
      },
    ],
    order: 22,
  },
  {
    title: t('meal_count'),
    type: 'select',
    name: 'mealCount',
    label: t('select_one'),
    options: [
      {
        label: t('one_meal'),
        value: 'one_meal',
      },
      {
        label: t('two_meals'),
        value: 'two_meals',
      },
      {
        label: t('three_meals'),
        value: 'three_meals',
      },
      {
        label: t('more_three'),
        value: 'more_three',
      },
    ],
    order: 23,
  },
  {},
  {
    title: t('cant_offer_meals'),
    type: 'subtitle',
  },
  {
    title: t('less_favrable'),
    type: 'text',
    name: 'lesFavrable',
    placeholder: t('less_favrable'),
    order: 24.1,
  },
  {
    title: t('lend_for_food'),
    type: 'text',
    name: 'lendForFood',
    placeholder: t('lend_for_food'),
    order: 24.2,
  },
  {
    title: t('reduce_food'),
    type: 'text',
    name: 'reduceFood',
    placeholder: t('reduce_food'),
    order: 24.3,
  },
  {
    title: t('reduce_food_adult'),
    type: 'text',
    name: 'reduceFoodAdult',
    placeholder: t('reduce_food_adult'),
    order: 24.4,
  },
  {
    title: t('reduce_meal_count'),
    type: 'text',
    name: 'reduceMealCount',
    placeholder: t('reduce_meal_count'),
    order: 24.5,
  },
  {},
  {
    title: t('did_because_no_money'),
    type: 'subtitle',
  },
  {
    title: t('sell_domestique'),
    name: 'sellDomestique',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.1,
  },
  {
    title: t('sell_anim'),
    name: 'sellAnim',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.2,
  },
  {
    title: t('spend_saving'),
    name: 'spendSaving',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.3,
  },
  {
    title: t('lend_money_food'),
    name: 'lendMoneyFood',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.4,
  },
  {
    title: t('sell_productif'),
    name: 'sellProductif',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.5,
  },
  {
    title: t('reduce_expences'),
    name: 'reduceExpences',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.6,
  },
  {
    title: t('childen_out_school'),
    name: 'childenOutSchool',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.7,
  },
  {
    title: t('sell_land'),
    name: 'sellLand',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.8,
  },
  {
    title: t('mandier'),
    name: 'mandier',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: 25.9,
  },
  {
    title: t('sell_productif_female'),
    name: 'sellProductifFemale',
    type: 'select',
    label: t('select_one'),
    options: [
      { label: t('no_need'), value: 'no_need' },
      { label: t('no_sold_somthing'), value: 'no_sold_somthing' },
      { label: t('yes'), value: 'yes' },
      { label: t('no_apliq'), value: 'no_apliq' },
    ],
    order: '25.10',
  },
];

export const validationSchema = t =>
  yup.object({
    TelChef: yup
      .string()
      .test(
        'is_phone',
        `1. ${t('must_be_phone')}`,
        val => !Number.isNaN(val) && /^(4|3|2)([0-9]{7})$/.test(val),
      ),
    NbrMbrMen: yup.string().required(`3. ${t('family_size')}`),
    hasHandicaps: yup.string().required(`4. ${t('family_handicap')}`),
    hasCronicIllness: yup.string().required(`5. ${t('has_cronic_illness')}`),
    infRenal: yup.string().when('hasCronicIllness', {
      is: 'yes',
      then: yup.string().required(`5.1. ${t('renal_insufisian')}`),
    }),
    debetes: yup.string().when('hasCronicIllness', {
      is: 'yes',
      then: yup.string().required(`5.2. ${t('debetes')}`),
    }),
    cardiaque: yup.string().when('hasCronicIllness', {
      is: 'yes',
      then: yup.string().required(`5.3. ${t('cardiaque')}`),
    }),
    otherIllness: yup.string().when('hasCronicIllness', {
      is: 'yes',
      then: yup.string().required(`5.4. ${t('other_illness')}`),
    }),
    asurrance: yup.string().required(`6. ${t('asurrance')}`),
    statePrograms: yup.string().required(`7. ${t('state_programs')}`),
    otherHouse: yup.string().required(`8. ${t('has_other_house')}`),
    farmingLand: yup.string().required(`9. ${t('farming_land')}`),
    waloLand: yup.string().when('farmingLand', {
      is: 'yes',
      then: yup.string().required(`10. ${t('walo_land')}`),
    }),
    waloMoud: yup.string().when('waloLand', {
      is: 'yes',
      then: yup.string().required(`11. ${t('moud')}`),
    }),
    diriLand: yup.string().when('farmingLand', {
      is: 'yes',
      then: yup.string().required(`12. ${t('diri_land')}`),
    }),
    diriMoud: yup.string().when('diriLand', {
      is: 'yes',
      then: yup.string().required(`13. ${t('moud')}`),
    }),
    freeFarmLand: yup.string().required(`14. ${t('free_farm_land')}`),
    waloLandNoProp: yup.string().when('freeFarmLand', {
      is: 'rent' || 'met' || 'privLand' || 'freeLand',
      then: yup.string().required(`15. ${t('walo_land_no_prop')}`),
    }),
    waloNoPropMoud: yup.string().when('waloLandNoProp', {
      is: 'yes',
      then: yup.string().required(`15.1. ${t('moud')}`),
    }),
    diriLandNoProp: yup.string().when('freeFarmLand', {
      is: 'rent' || 'met' || 'privLand' || 'freeLand',
      then: yup.string().required(`16. ${t('diri_land_no_prop')}`),
    }),
    diriNoPropMoud: yup.string().when('diriLandNoProp', {
      is: 'yes',
      then: yup.string().required(`16.1. ${t('moud')}`),
    }),
    irigueLandNoProp: yup.string().when('freeFarmLand', {
      is: 'rent' || 'met' || 'privLand' || 'freeLand',
      then: yup.string().required(`17. ${t('irigue_land_no_prop')}`),
    }),
    irigueNoPropMoud: yup.string().when('irigueLandNoProp', {
      is: 'yes',
      then: yup.string().required(`17.1. ${t('moud')}`),
    }),
    chiken: yup.string().required(`18. ${t('chiken')}`),
    donkey: yup.string().required(`19. ${t('donkey')}`),
    horse: yup.string().required(`20. ${t('horse')}`),
    mealCount: yup.string().required(`23. ${t('meal_count')}`),
    lesFavrable: yup
      .string()
      .required(`24.1. ${t('less_favrable')}`)
      .test(
        'is_invalid_range',
        `24.1. ${t('0_7_p')}`,
        val => val === 'P' || val === 'p' || (!Number.isNaN(val) && val >= 0 && val <= 7),
      ),
    lendForFood: yup
      .string()
      .required(`24.2. ${t('lend_for_food')}`)
      .test(
        'is_invalid_range',
        `24.2. ${t('0_7_p')}`,
        val => val === 'P' || val === 'p' || (!Number.isNaN(val) && val >= 0 && val <= 7),
      ),
    reduceFood: yup
      .string()
      .required(`24.3. ${t('reduce_food')}`)
      .test(
        'is_invalid_range',
        `24.3. ${t('0_7_p')}`,
        val => val === 'P' || val === 'p' || (!Number.isNaN(val) && val >= 0 && val <= 7),
      ),
    reduceFoodAdult: yup
      .string()
      .required(`24.4. ${t('reduce_food_adult')}`)
      .test(
        'is_invalid_range',
        `24.4. ${t('0_7_p')}`,
        val => val === 'P' || val === 'p' || (!Number.isNaN(val) && val >= 0 && val <= 7),
      ),
    reduceMealCount: yup
      .string()
      .required(`24.5. ${t('reduce_meal_count')}`)
      .test(
        'is_invalid_range',
        `24.5. ${t('0_7_p')}`,
        val => val === 'P' || val === 'p' || (!Number.isNaN(val) && val >= 0 && val <= 7),
      ),
    sellDomestique: yup.string().required(`25.1. ${t('sell_domestique')}`),
    sellAnim: yup.string().required(`25.2. ${t('sell_anim')}`),
    spendSaving: yup.string().required(`25.3. ${t('spend_saving')}`),
    lendMoneyFood: yup.string().required(`25.4. ${t('lend_money_food')}`),
    sellProductif: yup.string().required(`25.5. ${t('sell_productif')}`),
    reduceExpences: yup.string().required(`25.6. ${t('reduce_expences')}`),
    childenOutSchool: yup.string().required(`25.7. ${t('childen_out_school')}`),
    sellLand: yup.string().required(`25.8. ${t('sell_land')}`),
    mandier: yup.string().required(`25.9. ${t('mandier')}`),
    sellProductifFemale: yup.string().required(`25.10. ${t('sell_productif_female')}`),
  });

export const initialValues = {
  TelChef: '',
  NNIChef: '',
  NbrMbrMen: '',
  hasHandicaps: '',
  handicapType: '',
  hasCronicIllness: '',
  infRenal: '',
  debetes: '',
  cardiaque: '',
  otherIllness: '',
  asurrance: '',
  statePrograms: '',
  wichProgram: '',
  otherHouse: '',
  farmingLand: '',
  waloLand: '',
  waloMoud: '',
  diriLand: '',
  diriMoud: '',
  freeFarmLand: '',
  waloLandNoProp: '',
  waloNoPropMoud: '',
  diriLandNoProp: '',
  diriNoPropMoud: '',
  irigueLandNoProp: '',
  irigueNoPropMoud: '',
  chiken: '',
  donkey: '',
  horse: '',
  familyHasAny: '',
  foodSource: '',
  mealCount: '',
  lesFavrable: '',
  lendForFood: '',
  reduceFood: '',
  reduceFoodAdult: '',
  reduceMealCount: '',
  sellDomestique: '',
  sellAnim: '',
  spendSaving: '',
  lendMoneyFood: '',
  sellProductif: '',
  reduceExpences: '',
  childenOutSchool: '',
  sellLand: '',
  mandier: '',
  sellProductifFemale: '',
};
